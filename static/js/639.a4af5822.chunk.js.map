{"version":3,"file":"static/js/639.a4af5822.chunk.js","mappings":"mLACA,OAAiB,E,uECAjB,GAAiB,E,SCyCjB,EApCkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,mBAAQC,UAAWC,EAAAA,UAAnB,UACE,kBAAMD,UAAWC,EAAAA,KAAUL,SARZ,SAAAM,GACnBA,EAAMC,iBACNP,EAASE,GACTC,EAAS,GACV,EAIK,WACE,mBAAQK,KAAK,SAASJ,UAAWC,EAAAA,OAAjC,UACE,iBAAMD,UAAWC,EAAAA,aAAjB,uBAGF,kBACEI,KAAK,SACLC,MAAOR,EACPS,SArBW,SAAAL,GACnB,IAAMM,EAASN,EAAMO,OAAOH,MAC5BP,EAASS,EACV,EAmBSR,UAAWC,EAAAA,MACXG,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKvB,E,SCmBD,EApDqB,WACnB,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAASQ,EAAaE,IAAI,UAE5BC,GAAWC,EAAAA,EAAAA,OACfC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAgBf,GAFzB,gBAENgB,EAFM,EAENA,KACRC,QAAQC,IAAIF,GAEZV,GAAU,SAAAa,GACR,MAAM,GAAN,eAAWA,IAAX,OAAyBH,EAAKI,SAC/B,IAPa,gDASdH,QAAQC,IAAI,KAASG,SATP,yDAAH,qDAYXrB,GACFc,GAEH,GAAE,CAACd,IAEJ,IAKMsB,EAAWjB,EAAOkB,KAAI,SAAAC,GAC1B,IAAMC,EACmB,OAAvBD,EAAKE,cACD,+EADJ,0CAEuCF,EAAKG,aAC9C,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,EAAKK,IAAMvC,MAAO,CAAEwC,KAAKnB,GAA9C,WACE,uBAAIa,EAAKO,SACT,gBAAKC,IAAKP,EAAcQ,IAAKT,EAAKO,MAAOG,MAAM,YAH1CV,EAAKK,GAOjB,IAED,OACE,iCACE,SAAC,EAAD,CAAWzC,SAtBM,SAAAY,GACnBM,EAAU,IACVG,EAAgB,CAAET,OAAAA,GACnB,KAoBG,wBAAKsB,MAGV,ECxCD,EAXmB,WACf,OACI,4BACP,eAAI9B,UAAWC,EAAAA,MAAf,qBACO,SAAC,EAAD,MAMP,C,2JCdK0C,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,+BACTC,OAAO,CACPC,QAAQ,sCAIGC,EAAY,WACvB,OAAOL,EAAezB,IAAI,sBAC3B,EAEY+B,EAAkB,SAACZ,GAC9B,OAAOM,EAAezB,IAAf,iBAA6BmB,GACrC,EAEYa,EAAkB,SAACb,GAC9B,OAAOM,EAAezB,IAAf,iBAA6BmB,EAA7B,YACR,EACYc,EAAkB,SAACd,GAC9B,OAAOM,EAAezB,IAAf,iBAA6BmB,EAA7B,YACR,EAEYd,EAAkB,SAAC6B,GAC9B,OAAOT,EAAezB,IAAI,gBAAiB,CACzC4B,OAAQ,CACNO,cAAe,QACfC,KAAM,EACNF,MAAAA,IAEL,C","sources":["pages/MoviesPage/MoviesPage.module.css","components/SearchBar/SearchBar.module.css","components/SearchBar/SearchBar.jsx","components/SearchMovies/SearchMovies.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\n\n// import PropTypes from 'prop-types';\n\nimport css from './SearchBar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState('');\n\n  const handleChange = event => {\n    const search = event.target.value;\n    setState(search);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(state);\n    setState('');\n  };\n\n  return (\n      <header className={css.Searchbar}>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.button}>\n            <span className={css.button_label}>Search</span>\n          </button>\n\n          <input\n            name=\"search\"\n            value={state}\n            onChange={handleChange}\n            className={css.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n  );\n};\n\nexport default Searchbar;\n\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };","// import css from './SearchMovies.module.css';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation} from 'react-router-dom';\n\nimport Searchbar from 'components/SearchBar/SearchBar';\nimport { getSearchMovies } from 'services/moviesAPI';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  \nconst location = useLocation()\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getSearchMovies(search);\n        console.log(data);\n\n        setMovies(prevState => {\n          return [...prevState, ...data.results];\n        });\n      } catch (response) {\n        console.log(response.message);\n      }\n    };\n    if (search) {\n      fetchData();\n    }\n  }, [search]);\n\n  const updateSearch = search => {\n    setMovies([]);\n    setSearchParams({ search });\n  };\n\n  const elements = movies.map(item => {\n    const itembackdrop =\n      item.backdrop_path === null\n        ? 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n        : `https://image.tmdb.org/t/p/w500/${item.poster_path}`;\n    return (\n      <li key={item.id}>\n        <Link to={`/movies/${item.id}`} state={{ from:location}}>\n          <p>{item.title}</p>\n          <img src={itembackdrop} alt={item.title} width=\"200\" />\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <Searchbar onSubmit={updateSearch} />\n      <ul>{elements}</ul>\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import css from './MoviesPage.module.css'\n\nimport SearchMovies from 'components/SearchMovies/SearchMovies'\n\n\n\nconst MoviesPage = () => {\n    return (\n        <div>\n <h2 className={css.title}>Movies</h2>\n        <SearchMovies />\n\n        </div>\n       \n    )\n    \n}\nexport default MoviesPage","import axios from \"axios\";\n\nconst moviesInstance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params:{\n  api_key:\"7655faabc717e4bac2b661555353909e\"\n  }\n});\n\nexport const getMovies = () => {\n  return moviesInstance.get('/trending/movie/day');\n};\n\nexport const getMovieDetails = (id) => {\n  return moviesInstance.get(`/movie/${id}`)\n}\n\nexport const getMovieCredits = (id) => {\n  return moviesInstance.get(`/movie/${id}/credits`)\n}\nexport const getMovieReviews = (id) => {\n  return moviesInstance.get(`/movie/${id}/reviews`)\n}\n\nexport const getSearchMovies = (query) => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      include_adult: 'false',\n      page: 1,\n      query,\n  } })\n}\n\n"],"names":["onSubmit","useState","state","setState","className","css","event","preventDefault","type","name","value","onChange","search","target","autoComplete","autoFocus","placeholder","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchData","getSearchMovies","data","console","log","prevState","results","message","elements","map","item","itembackdrop","backdrop_path","poster_path","to","id","from","title","src","alt","width","moviesInstance","axios","baseURL","params","api_key","getMovies","getMovieDetails","getMovieCredits","getMovieReviews","query","include_adult","page"],"sourceRoot":""}